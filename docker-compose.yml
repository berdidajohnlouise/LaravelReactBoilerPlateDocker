version: '3'

services:
  api:
    build: ./docker-dev/api
    depends_on:
      - mysql
    volumes:
      - ./api:/var/www/html/api
      - ./docker-dev/php/local.ini:/usr/local/etc/php/local.ini
    working_dir: /var/www/html/api
    networks:
      - app-network
  
  client:
    image: node:16
    stdin_open: true
    volumes:
      - ./client:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
    environment:
      HOST: 0.0.0.0
    networks:
      - app-network
      
  nginx:
    image: nginx
    ports:
      - 80:80
      - 81:81
    depends_on:
      - api
      - client
      - phpmyadmin
    restart: unless-stopped
    tty: true
    volumes:
      - ./client:/var/www/html/client
      - ./api:/var/www/html/api
      - ./docker-dev/nginx/api.conf:/etc/nginx/conf.d/default.conf
      - ./docker-dev/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "7000:80"
    environment:
      HOST: 0.0.0.0
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    networks:
      - app-network

  mysql:
    image: mysql:5.7.29
    container_name: mysql
    restart: unless-stopped
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: dbname
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpassword
      MYSQL_ROOT_PASSWORD: dbrootpassword
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

networks: 
  app-network:
    driver: bridge
    external: false
